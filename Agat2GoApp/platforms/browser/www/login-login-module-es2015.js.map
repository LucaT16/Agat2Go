{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+gB;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACM;AACF;AACU;AAEV;AAEJ;AACY;AAErD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAYF,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAG;AAAlB,eAAe;IAV3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,gEAAU;SACX;QACD,YAAY,EAAE,CAAC,qDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;AC3B5B,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;;;ACAF;AAED;AACnB;AACuC;AACf;AACF;AAQ/D,IAAa,SAAS,GAAtB,MAAa,SAAS;IAEpB,YAAoB,WAAwB,EAAU,MAAc,EAAU,aAA4B,EAAS,eAAgC;QAA/H,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAS,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAExJ,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC;aAC/B,IAAI,CACH,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;YACzC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QACzC,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,4BAA4B,GAAE,KAAK,CAAC,CAC5D,CAAC;IACN,CAAC;IAEK,SAAS,CAAC,WAA2B;;YACzC,IAAI;gBACF,MAAM,cAAc,GAAiC,MAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAC/E,WAAW,CAAC,KAAK,EACjB,WAAW,CAAC,QAAQ,CACrB,CAAC;gBACF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;qBACpE,IAAI,CACH,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EACjC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,CACpD,CAAC;gBACJ,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC;gBACtD,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;gBAClC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;aACxC;YAAC,OAAO,KAAK,EAAE;gBACd,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;gBAClC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;aAClC;QACH,CAAC;KAAA;CACF;;YAjCkC,yEAAW;YAAkB,sDAAM;YAAyB,8EAAa;YAA0B,0EAAe;;AADlG;IAAhD,+DAAS,CAAC,2FAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;oEAAW,2FAAiB;2CAAC;AADlE,SAAS;IANrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,uIAAgC;QAEhC,SAAS,EAAE,CAAC,8EAAa,CAAC;;KAC3B,CAAC;2EAGiC,yEAAW,EAAkB,sDAAM,EAAyB,8EAAa,EAA0B,0EAAe;GAFxI,SAAS,CAmCrB;AAnCqB","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <app-auth-form #loginForm (formSubmitted)=\\\"loginUser($event)\\\" [actionButtonText]=\\\"'Login'\\\" [dontShowName]=\\\"true\\\"></app-auth-form>\\n  <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" routerLink=\\\"/signup\\\">\\n    Create a new account\\n  </ion-button>\\n\\n  <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" routerLink=\\\"/reset-password\\\">\\n    I forgot my password\\n  </ion-button>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\nimport { AuthModule } from '../services/auth.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    AuthModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserCredential } from 'src/app/models/user';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { AuthFormComponent } from '../components/auth-form/auth-form.component';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport { FirebaseService } from '../services/firebase.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n  providers :[NativeStorage]\n})\nexport class LoginPage implements OnInit {\n  @ViewChild(AuthFormComponent, { static: false }) authForm: AuthFormComponent;\n  constructor(private authService: AuthService, private router: Router, private nativeStorage: NativeStorage, public firebaseService: FirebaseService) { }\n\n  ngOnInit() { \n    this.nativeStorage.getItem('user')\n      .then(\n        data => { \n          console.log(data); \n          this.firebaseService.userId = data.userId\n          this.router.navigateByUrl('tabs/tab1');\n        },\n        error => console.error(\"UserId nicht gespeichert: \"+ error)\n      );\n  }\n\n  async loginUser(credentials: UserCredential): Promise<void> {\n    try {\n      const userCredential: firebase.auth.UserCredential = await this.authService.login(\n        credentials.email,\n        credentials.password\n      );\n      this.nativeStorage.setItem('user', { userId: userCredential.user.uid })\n        .then(\n          () => console.log('Stored item!'),\n          error => console.error('Error storing item', error)\n        );\n      this.firebaseService.userId = userCredential.user.uid;\n      await this.authForm.hideLoading();\n      this.router.navigateByUrl('tabs/tab1');\n    } catch (error) {\n      await this.authForm.hideLoading();\n      this.authForm.handleError(error);\n    }\n  }\n}\n"],"sourceRoot":""}