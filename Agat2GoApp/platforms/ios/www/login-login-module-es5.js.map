{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+gB;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACM;AACF;AACU;AAEV;AAEJ;AACY;AAErD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAYF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAV3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,gEAAU;aACX;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;AC3B5B,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;;;ACAF;AAED;AACnB;AACuC;AACf;AACF;AAQ/D;IAEE,mBAAoB,WAAwB,EAAU,MAAc,EAAU,aAA4B,EAAS,eAAgC;QAA/H,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAS,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAExJ,4BAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC;aAC/B,IAAI,CACH,cAAI;YACF,qBAAqB;YACrB,KAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM;YACzC,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QACzC,CAAC,EACD,eAAK,IAAI,cAAO,CAAC,KAAK,CAAC,4BAA4B,GAAE,KAAK,CAAC,EAAlD,CAAkD,CAC5D,CAAC;IACN,CAAC;IAEK,6BAAS,GAAf,UAAgB,WAA2B;;;;;;;wBAEc,qBAAM,IAAI,CAAC,WAAW,CAAC,KAAK,CAC/E,WAAW,CAAC,KAAK,EACjB,WAAW,CAAC,QAAQ,CACrB;;wBAHK,cAAc,GAAiC,SAGpD;wBACD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;6BACpE,IAAI,CACH,cAAM,cAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAA3B,CAA2B,EACjC,eAAK,IAAI,cAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,KAAK,CAAC,EAA1C,CAA0C,CACpD,CAAC;wBACJ,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC;wBACtD,qBAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;;wBAAjC,SAAiC,CAAC;wBAClC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;;;;wBAEvC,qBAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE;;wBAAjC,SAAiC,CAAC;wBAClC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAK,CAAC,CAAC;;;;;;KAEpC;;gBAhCgC,yEAAW;gBAAkB,sDAAM;gBAAyB,8EAAa;gBAA0B,0EAAe;;IADlG;QAAhD,+DAAS,CAAC,2FAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;wEAAW,2FAAiB;+CAAC;IADlE,SAAS;QANrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,uIAAgC;YAEhC,SAAS,EAAE,CAAC,8EAAa,CAAC;;SAC3B,CAAC;+EAGiC,yEAAW,EAAkB,sDAAM,EAAyB,8EAAa,EAA0B,0EAAe;OAFxI,SAAS,CAmCrB;IAAD,gBAAC;CAAA;AAnCqB","file":"login-login-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <app-auth-form #loginForm (formSubmitted)=\\\"loginUser($event)\\\" [actionButtonText]=\\\"'Login'\\\" [dontShowName]=\\\"true\\\"></app-auth-form>\\n  <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" routerLink=\\\"/signup\\\">\\n    Create a new account\\n  </ion-button>\\n\\n  <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" routerLink=\\\"/reset-password\\\">\\n    I forgot my password\\n  </ion-button>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\nimport { AuthModule } from '../services/auth.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    AuthModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { UserCredential } from 'src/app/models/user';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { AuthFormComponent } from '../components/auth-form/auth-form.component';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\nimport { FirebaseService } from '../services/firebase.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n  providers :[NativeStorage]\n})\nexport class LoginPage implements OnInit {\n  @ViewChild(AuthFormComponent, { static: false }) authForm: AuthFormComponent;\n  constructor(private authService: AuthService, private router: Router, private nativeStorage: NativeStorage, public firebaseService: FirebaseService) { }\n\n  ngOnInit() { \n    this.nativeStorage.getItem('user')\n      .then(\n        data => { \n          //console.log(data); \n          this.firebaseService.userId = data.userId\n          this.router.navigateByUrl('tabs/tab1');\n        },\n        error => console.error(\"UserId nicht gespeichert: \"+ error)\n      );\n  }\n\n  async loginUser(credentials: UserCredential): Promise<void> {\n    try {\n      const userCredential: firebase.auth.UserCredential = await this.authService.login(\n        credentials.email,\n        credentials.password\n      );\n      this.nativeStorage.setItem('user', { userId: userCredential.user.uid })\n        .then(\n          () => console.log('Stored item!'),\n          error => console.error('Error storing item', error)\n        );\n      this.firebaseService.userId = userCredential.user.uid;\n      await this.authForm.hideLoading();\n      this.router.navigateByUrl('tabs/tab1');\n    } catch (error) {\n      await this.authForm.hideLoading();\n      this.authForm.handleError(error);\n    }\n  }\n}\n"],"sourceRoot":""}